!function(t,e){t&&!t.getElementById("livereloadscript")&&((e=t.createElement("script")).async=1,e.src="//"+(self.location.host||"localhost").split(":")[0]+":9999/livereload.js?snipver=1",e.id="livereloadscript",t.getElementsByTagName("head")[0].appendChild(e))}(self.document);const t="token-action-hud-fu",e={attack:"tokenActionHud.attack",equipment:"tokenActionHud.equipment",guard:"tokenActionHud.guard",utility:"tokenActionHud.utility"},n={mainSlot:{id:"mainSlot",name:"tokenActionHud.fu.attack.mainSlot",type:"system"},offSlot:{id:"offSlot",name:"tokenActionHud.fu.attack.offSlot",type:"system"},armorSlot:{id:"armorSlot",name:"tokenActionHud.fu.attack.armorSlot",type:"system"},accessorySlot:{id:"accessorySlot",name:"tokenActionHud.fu.attack.accessorySlot",type:"system"},weapons:{id:"weapons",name:"tokenActionHud.fu.equipment.weapons",type:"system"},shields:{id:"shields",name:"tokenActionHud.fu.equipment.shields",type:"system"},armor:{id:"armor",name:"tokenActionHud.fu.equipment.armor",type:"system"},accessories:{id:"accessories",name:"tokenActionHud.fu.equipment.accessories",type:"system"},spells:{id:"spells",name:"tokenActionHud.fu.spells.label",type:"system"},miscAbility:{id:"abilities",name:"tokenActionHud.fu.abilities.label",type:"system"},combat:{id:"combat",name:"tokenActionHud.combat",type:"system"},token:{id:"token",name:"tokenActionHud.token",type:"system"},utility:{id:"utility",name:"tokenActionHud.utility",type:"system"}},i={weapon:{groupId:"weapons"},shield:{groupId:"shields"},armor:{groupId:"armor"},accessory:{groupId:"accessories"},consumable:{groupId:"consumables"},treasure:{groupId:"treasures"},spell:{groupId:"spells"},miscAbility:{groupId:"abilities"}};let s=null;Hooks.once("tokenActionHudCoreApiReady",(async e=>{s=class Utils{static getSetting(n,i=null){let s=i??null;try{s=game.settings.get(t,n)}catch{e.api.Logger.debug(`Setting '${n}' not found`)}return s}static async setSetting(n,i){try{i=await game.settings.set(t,n,i),e.api.Logger.debug(`Setting '${n}' set to '${i}'`)}catch{e.api.Logger.debug(`Setting '${n}' not found`)}}}}));let o=null;Hooks.once("tokenActionHudCoreApiReady",(async t=>{o=class ActionHandler extends t.api.ActionHandler{a;async buildSystemActions(e){if(this.actors=this.actor?[this.actor]:this._getActors(),this.actorType=this.actor?.type,this.displayUnequipped=s.getSetting("displayUnequipped"),this.actor){let e=this.actor.items;e=t.api.Utils.sortItemsByName(e),this.items=e}"character"===this.actorType?this.#t():"npc"===this.actorType?this.#e():this.actor||this.#n()}#t(){this.#i(),this.#s(),this.#o(),this.#a()}#e(){}#n(){}handleTravelActionClick(){showTravelCheckDialog()}async#s(){if(0===this.items.size)return;const n="equipment",s=new Map;for(const[t,e]of this.items){const n=e.type;if(e.isEquipped||this.displayUnequipped){const i=s.get(n)??new Map;i.set(t,e),s.set(n,i)}}for(const[o,a]of s){const s=i[o]?.groupId;if(!s)continue;const l={id:s,type:"system"},c=[...a].map((([i,s])=>{const o=i,a=s.name,l=t.api.Utils.i18n(e[n]),c=`${l?`${l}: `:""}${a}`,r=[n,o].join(this.delimiter);return{id:o,name:a,listName:c,encodedValue:r}}));this.addActions(c,l)}}async#o(){if(0===this.items.size)return;const n="spell",s=new Map;for(const[t,e]of this.items){const n=e.type;if(e.isEquipped||this.displayUnequipped){const i=s.get(n)??new Map;i.set(t,e),s.set(n,i)}}for(const[o,a]of s){const s=i[o]?.groupId;if(!s)continue;const l={id:s,type:"system"},c=[...a].map((([i,s])=>{const o=i,a=s.name,l=t.api.Utils.i18n(e[n]),c=`${l?`${l}: `:""}${a}`,r=[n,o].join(this.delimiter);return{id:o,name:a,listName:c,encodedValue:r}}));this.addActions(c,l)}}async#a(){const t=i.travel?.groupId;if(!t)return;const e={id:t,type:"system"},n=[{id:"travel",name:"Travel",listName:"Travel",encodedValue:["travel","travel"].join(this.delimiter)}];this.addActions(n,e),$(`#${e.id}`).click((t=>{t.preventDefault(),this.handleTravelActionClick()}))}async#i(){if(0===this.items.size)return;const n="attack",i=new Map;for(const[t,e]of this.items){const n=e.type;if(e.isEquipped||this.displayUnequipped){const s=i.get(n)??new Map;s.set(t,e),i.set(n,s)}}for(const[s,o]of i){const i=SLOT_TYPE[s]?.groupId;if(!i)continue;const a={id:i,type:"system"},l=[...o].map((([i,s])=>{const o=i,a=s.name,l=t.api.Utils.i18n(e[n]),c=`${l?`${l}: `:""}${a}`,r=[n,o].join(this.delimiter);return{id:o,name:a,listName:c,encodedValue:r}}));this.addActions(l,a)}}}}));let a=null;Hooks.once("tokenActionHudCoreApiReady",(async t=>{const e=n;Object.values(e).forEach((e=>{e.name=t.api.Utils.i18n(e.name),e.listName=`Group: ${t.api.Utils.i18n(e.listName??e.name)}`}));const i=Object.values(e);a={layout:[{nestId:"attack",id:"attack",name:t.api.Utils.i18n("Attack"),groups:[{...e.mainSlot,nestId:"attack_mainSlot"},{...e.offSlot,nestId:"attack_offSlot"},{...e.armorSlot,nestId:"attack_armorSlot"},{...e.accessorySlot,nestId:"attack_accessorySlot"}]},{nestId:"equipment",id:"equipment",name:t.api.Utils.i18n("Equipment"),groups:[{...e.weapons,nestId:"equipment_weapons"},{...e.shields,nestId:"equipment_shields"},{...e.armor,nestId:"equipment_armor"},{...e.accessories,nestId:"equipment_accessories"}]},{nestId:"guard",id:"guard",name:t.api.Utils.i18n("Guard"),groups:[{...e.weapons,nestId:"equipment_weapons"}]},{nestId:"spell",id:"spell",name:t.api.Utils.i18n("Spell"),groups:[{...e.spells,nestId:"spell_name"}]},{nestId:"travel",id:"travel",name:t.api.Utils.i18n("Travel"),groups:[{...e.travels,nestId:"travel_name"}]},{nestId:"utility",id:"utility",name:t.api.Utils.i18n("tokenActionHud.utility"),groups:[{...e.combat,nestId:"utility_combat"},{...e.token,nestId:"utility_token"},{...e.rests,nestId:"utility_rests"},{...e.utility,nestId:"utility_utility"}]}],groups:i}}));let l=null;Hooks.once("tokenActionHudCoreApiReady",(async t=>{l=class RollHandler extends t.api.RollHandler{async handleActionClick(t,e){const[n,i]=e.split("|");if(["item"].includes(n)&&this.isRenderItem())return this.doRenderItem(this.actor,i);const s=["character"];if(this.actor)return void await this.#l(t,this.actor,this.token,n,i);const o=canvas.tokens.controlled.filter((t=>s.includes(t.actor?.type)));for(const e of o){const s=e.actor;await this.#l(t,s,e,n,i)}}async handleActionHover(t,e){}async handleGroupClick(t,e){}async#l(t,e,n,i,s){switch(i){case"item":this.#c(t,e,s);break;case"utility":this.#r(n,s)}}#c(t,e,n){e.items.get(n).toChat(t)}async#r(t,e){if("endTurn"===e)game.combat?.current?.tokenId===t.id&&await(game.combat?.nextTurn())}}}));let c=null;Hooks.once("tokenActionHudCoreApiReady",(async e=>{c=class SystemManager extends e.api.SystemManager{getActionHandler(){return new o}getAvailableRollHandlers(){return{core:"Core Template"}}getRollHandler(t){let e;return e=new l,e}async registerDefaults(){return a}registerSettings(e){!function register$1(e){game.settings.register(t,"displayUnequipped",{name:game.i18n.localize("tokenActionHud.fu.settings.displayUnequipped.name"),hint:game.i18n.localize("tokenActionHud.fu.settings.displayUnequipped.hint"),scope:"client",config:!0,type:Boolean,default:!0,onChange:t=>{e(t)}})}(e)}registerStyles(){return{template:{class:"tah-style-fu-style",file:"tah-fu",moduleId:t,name:"Fabula Ultima Style"}}}}})),Hooks.on("tokenActionHudCoreApiReady",(async()=>{const e=game.modules.get(t);e.api={requiredCoreModuleVersion:"1.5",SystemManager:c},Hooks.call("tokenActionHudSystemReady",e)})),function(t,e){t&&!t.getElementById("livereloadscript")&&((e=t.createElement("script")).async=1,e.src="//"+(self.location.host||"localhost").split(":")[0]+":9999/livereload.js?snipver=1",e.id="livereloadscript",t.getElementsByTagName("head")[0].appendChild(e))}(self.document);const r="token-action-hud-fu",d={attack:"tokenActionHud.attack",equipment:"tokenActionHud.equipment",guard:"tokenActionHud.guard",utility:"tokenActionHud.utility"},u={mainSlot:{id:"mainSlot",name:"tokenActionHud.fu.attack.mainSlot",type:"system"},offSlot:{id:"offSlot",name:"tokenActionHud.fu.attack.offSlot",type:"system"},armorSlot:{id:"armorSlot",name:"tokenActionHud.fu.attack.armorSlot",type:"system"},accessorySlot:{id:"accessorySlot",name:"tokenActionHud.fu.attack.accessorySlot",type:"system"},weapons:{id:"weapons",name:"tokenActionHud.fu.equipment.weapons",type:"system"},shields:{id:"shields",name:"tokenActionHud.fu.equipment.shields",type:"system"},armor:{id:"armor",name:"tokenActionHud.fu.equipment.armor",type:"system"},accessories:{id:"accessories",name:"tokenActionHud.fu.equipment.accessories",type:"system"},spells:{id:"spells",name:"tokenActionHud.fu.spells.label",type:"system"},miscAbility:{id:"abilities",name:"tokenActionHud.fu.abilities.label",type:"system"},combat:{id:"combat",name:"tokenActionHud.combat",type:"system"},token:{id:"token",name:"tokenActionHud.token",type:"system"},utility:{id:"utility",name:"tokenActionHud.utility",type:"system"}},p={weapon:{groupId:"weapons"},shield:{groupId:"shields"},armor:{groupId:"armor"},accessory:{groupId:"accessories"},consumable:{groupId:"consumables"},treasure:{groupId:"treasures"},spell:{groupId:"spells"},miscAbility:{groupId:"abilities"}};let m=null;Hooks.once("tokenActionHudCoreApiReady",(async t=>{m=class Utils{static getSetting(e,n=null){let i=n??null;try{i=game.settings.get(r,e)}catch{t.api.Logger.debug(`Setting '${e}' not found`)}return i}static async setSetting(e,n){try{n=await game.settings.set(r,e,n),t.api.Logger.debug(`Setting '${e}' set to '${n}'`)}catch{t.api.Logger.debug(`Setting '${e}' not found`)}}}}));let y=null;Hooks.once("tokenActionHudCoreApiReady",(async t=>{y=class ActionHandler extends t.api.ActionHandler{a;async buildSystemActions(e){if(this.actors=this.actor?[this.actor]:this._getActors(),this.actorType=this.actor?.type,this.displayUnequipped=m.getSetting("displayUnequipped"),this.actor){let e=this.actor.items;e=t.api.Utils.sortItemsByName(e),this.items=e}"character"===this.actorType?this.#d():"npc"===this.actorType?this.#u():this.actor||this.#p()}#d(){this.#m(),this.#y(),this.#g(),this.#h()}#u(){}#p(){}handleTravelActionClick(){showTravelCheckDialog()}async#y(){if(0===this.items.size)return;const e="equipment",n=new Map;for(const[t,e]of this.items){const i=e.type;if(e.isEquipped||this.displayUnequipped){const s=n.get(i)??new Map;s.set(t,e),n.set(i,s)}}for(const[i,s]of n){const n=p[i]?.groupId;if(!n)continue;const o={id:n,type:"system"},a=[...s].map((([n,i])=>{const s=n,o=i.name,a=t.api.Utils.i18n(d[e]),l=`${a?`${a}: `:""}${o}`,c=[e,s].join(this.delimiter);return{id:s,name:o,listName:l,encodedValue:c}}));this.addActions(a,o)}}async#g(){if(0===this.items.size)return;const e="spell",n=new Map;for(const[t,e]of this.items){const i=e.type;if(e.isEquipped||this.displayUnequipped){const s=n.get(i)??new Map;s.set(t,e),n.set(i,s)}}for(const[i,s]of n){const n=p[i]?.groupId;if(!n)continue;const o={id:n,type:"system"},a=[...s].map((([n,i])=>{const s=n,o=i.name,a=t.api.Utils.i18n(d[e]),l=`${a?`${a}: `:""}${o}`,c=[e,s].join(this.delimiter);return{id:s,name:o,listName:l,encodedValue:c}}));this.addActions(a,o)}}async#h(){const t=p.travel?.groupId;if(!t)return;const e={id:t,type:"system"},n=[{id:"travel",name:"Travel",listName:"Travel",encodedValue:["travel","travel"].join(this.delimiter)}];this.addActions(n,e),$(`#${e.id}`).click((t=>{t.preventDefault(),this.handleTravelActionClick()}))}async#m(){if(0===this.items.size)return;const e="attack",n=new Map;for(const[t,e]of this.items){const i=e.type;if(e.isEquipped||this.displayUnequipped){const s=n.get(i)??new Map;s.set(t,e),n.set(i,s)}}for(const[i,s]of n){const n=SLOT_TYPE[i]?.groupId;if(!n)continue;const o={id:n,type:"system"},a=[...s].map((([n,i])=>{const s=n,o=i.name,a=t.api.Utils.i18n(d[e]),l=`${a?`${a}: `:""}${o}`,c=[e,s].join(this.delimiter);return{id:s,name:o,listName:l,encodedValue:c}}));this.addActions(a,o)}}}}));let g=null;Hooks.once("tokenActionHudCoreApiReady",(async t=>{const e=u;Object.values(e).forEach((e=>{e.name=t.api.Utils.i18n(e.name),e.listName=`Group: ${t.api.Utils.i18n(e.listName??e.name)}`}));const n=Object.values(e);g={layout:[{nestId:"attack",id:"attack",name:t.api.Utils.i18n("Attack"),groups:[{...e.mainSlot,nestId:"attack_mainSlot"},{...e.offSlot,nestId:"attack_offSlot"},{...e.armorSlot,nestId:"attack_armorSlot"},{...e.accessorySlot,nestId:"attack_accessorySlot"}]},{nestId:"equipment",id:"equipment",name:t.api.Utils.i18n("Equipment"),groups:[{...e.weapons,nestId:"equipment_weapons"},{...e.shields,nestId:"equipment_shields"},{...e.armor,nestId:"equipment_armor"},{...e.accessories,nestId:"equipment_accessories"}]},{nestId:"guard",id:"guard",name:t.api.Utils.i18n("Guard"),groups:[{...e.weapons,nestId:"equipment_weapons"}]},{nestId:"spell",id:"spell",name:t.api.Utils.i18n("Spell"),groups:[{...e.spells,nestId:"spell_name"}]},{nestId:"travel",id:"travel",name:t.api.Utils.i18n("Travel"),groups:[{...e.travels,nestId:"travel_name"}]},{nestId:"utility",id:"utility",name:t.api.Utils.i18n("tokenActionHud.utility"),groups:[{...e.combat,nestId:"utility_combat"},{...e.token,nestId:"utility_token"},{...e.rests,nestId:"utility_rests"},{...e.utility,nestId:"utility_utility"}]}],groups:n}}));let h=null;Hooks.once("tokenActionHudCoreApiReady",(async t=>{h=class RollHandler extends t.api.RollHandler{async handleActionClick(t,e){const[n,i]=e.split("|");if(["item"].includes(n)&&this.isRenderItem())return this.doRenderItem(this.actor,i);const s=["character"];if(this.actor)return void await this.#k(t,this.actor,this.token,n,i);const o=canvas.tokens.controlled.filter((t=>s.includes(t.actor?.type)));for(const e of o){const s=e.actor;await this.#k(t,s,e,n,i)}}async handleActionHover(t,e){}async handleGroupClick(t,e){}async#k(t,e,n,i,s){switch(i){case"item":this.#f(t,e,s);break;case"utility":this.#A(n,s)}}#f(t,e,n){e.items.get(n).toChat(t)}async#A(t,e){"endTurn"===e&&game.combat?.current?.tokenId===t.id&&await(game.combat?.nextTurn())}}}));let k=null;var f,A;Hooks.once("tokenActionHudCoreApiReady",(async t=>{k=class SystemManager extends t.api.SystemManager{getActionHandler(){return new y}getAvailableRollHandlers(){return{core:"Core Template"}}getRollHandler(t){let e;return e=new h,e}async registerDefaults(){return g}registerSettings(t){!function register$1(t){game.settings.register(r,"displayUnequipped",{name:game.i18n.localize("tokenActionHud.fu.settings.displayUnequipped.name"),hint:game.i18n.localize("tokenActionHud.fu.settings.displayUnequipped.hint"),scope:"client",config:!0,type:Boolean,default:!0,onChange:e=>{t(e)}})}(t)}registerStyles(){return{template:{class:"tah-style-fu-style",file:"tah-fu",moduleId:r,name:"Fabula Ultima Style"}}}}})),Hooks.on("tokenActionHudCoreApiReady",(async()=>{const t=game.modules.get(r);t.api={requiredCoreModuleVersion:"1.5",SystemManager:k},Hooks.call("tokenActionHudSystemReady",t)})),(f=self.document)&&!f.getElementById("livereloadscript")&&((A=f.createElement("script")).async=1,A.src="//"+(self.location.host||"localhost").split(":")[0]+":9999/livereload.js?snipver=1",A.id="livereloadscript",f.getElementsByTagName("head")[0].appendChild(A));const H="token-action-hud-fu",I={item:"tokenActionHud.fu.item",utility:"tokenActionHud.utility"},b={armor:{id:"armor",name:"tokenActionHud.fu.armor",type:"system"},equipment:{id:"equipment",name:"tokenActionHud.fu.equipment",type:"system"},consumables:{id:"consumables",name:"tokenActionHud.fu.consumables",type:"system"},containers:{id:"containers",name:"tokenActionHud.fu.containers",type:"system"},treasure:{id:"treasure",name:"tokenActionHud.fu.treasure",type:"system"},weapons:{id:"weapons",name:"tokenActionHud.fu.weapons",type:"system"},combat:{id:"combat",name:"tokenActionHud.combat",type:"system"},token:{id:"token",name:"tokenActionHud.token",type:"system"},utility:{id:"utility",name:"tokenActionHud.utility",type:"system"}},S={armor:{groupId:"armor"},backpack:{groupId:"containers"},consumable:{groupId:"consumables"},equipment:{groupId:"equipment"},treasure:{groupId:"treasure"},weapon:{groupId:"weapons"}};let v=null;Hooks.once("tokenActionHudCoreApiReady",(async t=>{v=class Utils{static getSetting(e,n=null){let i=n??null;try{i=game.settings.get(H,e)}catch{t.api.Logger.debug(`Setting '${e}' not found`)}return i}static async setSetting(e,n){try{n=await game.settings.set(H,e,n),t.api.Logger.debug(`Setting '${e}' set to '${n}'`)}catch{t.api.Logger.debug(`Setting '${e}' not found`)}}}}));let q=null;Hooks.once("tokenActionHudCoreApiReady",(async t=>{q=class ActionHandler extends t.api.ActionHandler{a;async buildSystemActions(t){this.actors=this.actor?[this.actor]:this._getActors(),this.actorType=this.actor?.type,this.displayUnequipped=v.getSetting("displayUnequipped"),this.actor,"character"===this.actorType?this.#H():"npc"===this.actorType?this.#I():this.actor||this.#b()}#H(){this.#S()}#I(){this.#S()}#b(){}async#S(){if(0===this.items.size)return;const e="item",n=new Map;for(const[t,e]of this.items){const i=e.type;if(e.equipped||this.displayUnequipped){const s=n.get(i)??new Map;s.set(t,e),n.set(i,s)}}for(const[i,s]of n){const n=S[i]?.groupId;if(!n)continue;const o={id:n,type:"system"},a=[...s].map((([n,i])=>{const s=n,o=i.name,a=t.api.Utils.i18n(I[e]),l=`${a?`${a}: `:""}${o}`,c=[e,s].join(this.delimiter);return{id:s,name:o,listName:l,encodedValue:c}}));this.addActions(a,o)}}}}));let w=null;Hooks.once("tokenActionHudCoreApiReady",(async t=>{const e=b;Object.values(e).forEach((e=>{e.name=t.api.Utils.i18n(e.name),e.listName=`Group: ${t.api.Utils.i18n(e.listName??e.name)}`}));const n=Object.values(e);w={layout:[{nestId:"inventory",id:"inventory",name:t.api.Utils.i18n("Template.Inventory"),groups:[{...e.weapons,nestId:"inventory_weapons"},{...e.armor,nestId:"inventory_armor"},{...e.equipment,nestId:"inventory_equipment"},{...e.consumables,nestId:"inventory_consumables"},{...e.containers,nestId:"inventory_containers"},{...e.treasure,nestId:"inventory_treasure"}]},{nestId:"utility",id:"utility",name:t.api.Utils.i18n("tokenActionHud.utility"),groups:[{...e.combat,nestId:"utility_combat"},{...e.token,nestId:"utility_token"},{...e.rests,nestId:"utility_rests"},{...e.utility,nestId:"utility_utility"}]}],groups:n}}));let U=null;Hooks.once("tokenActionHudCoreApiReady",(async t=>{U=class RollHandler extends t.api.RollHandler{async handleActionClick(t,e){const[n,i]=e.split("|");if(["item"].includes(n)&&this.isRenderItem())return this.doRenderItem(this.actor,i);const s=["character"];if(this.actor)return void await this.#v(t,this.actor,this.token,n,i);const o=canvas.tokens.controlled.filter((t=>s.includes(t.actor?.type)));for(const e of o){const s=e.actor;await this.#v(t,s,e,n,i)}}async handleActionHover(t,e){}async handleGroupClick(t,e){}async#v(t,e,n,i,s){switch(i){case"item":this.#q(t,e,s);break;case"utility":this.#w(n,s)}}#q(t,e,n){e.items.get(n).toChat(t)}async#w(t,e){"endTurn"===e&&game.combat?.current?.tokenId===t.id&&await(game.combat?.nextTurn())}}}));let C=null;var _,R;Hooks.once("tokenActionHudCoreApiReady",(async t=>{C=class SystemManager extends t.api.SystemManager{getActionHandler(){return new q}getAvailableRollHandlers(){return{core:"Core Template"}}getRollHandler(t){let e;return e=new U,e}async registerDefaults(){return w}registerSettings(t){!function register(t){game.settings.register(H,"displayUnequipped",{name:game.i18n.localize("tokenActionHud.fu.settings.displayUnequipped.name"),hint:game.i18n.localize("tokenActionHud.fu.settings.displayUnequipped.hint"),scope:"client",config:!0,type:Boolean,default:!0,onChange:e=>{t(e)}})}(t)}registerStyles(){return{template:{class:"tah-style-template-style",file:"tah-template-style",moduleId:H,name:"Template Style"}}}}})),Hooks.on("tokenActionHudCoreApiReady",(async()=>{const t=game.modules.get(H);t.api={requiredCoreModuleVersion:"1.5",SystemManager:C},Hooks.call("tokenActionHudSystemReady",t)})),(_=self.document)&&!_.getElementById("livereloadscript")&&((R=_.createElement("script")).async=1,R.src="//"+(self.location.host||"localhost").split(":")[0]+":9999/livereload.js?snipver=1",R.id="livereloadscript",_.getElementsByTagName("head")[0].appendChild(R));const T="token-action-hud-fu",M={item:"tokenActionHud.fu.item",utility:"tokenActionHud.utility"},E={armor:{id:"armor",name:"tokenActionHud.fu.armor",type:"system"},equipment:{id:"equipment",name:"tokenActionHud.fu.equipment",type:"system"},consumables:{id:"consumables",name:"tokenActionHud.fu.consumables",type:"system"},containers:{id:"containers",name:"tokenActionHud.fu.containers",type:"system"},treasure:{id:"treasure",name:"tokenActionHud.fu.treasure",type:"system"},weapons:{id:"weapons",name:"tokenActionHud.fu.weapons",type:"system"},combat:{id:"combat",name:"tokenActionHud.combat",type:"system"},token:{id:"token",name:"tokenActionHud.token",type:"system"},utility:{id:"utility",name:"tokenActionHud.utility",type:"system"}},N={armor:{groupId:"armor"},backpack:{groupId:"containers"},consumable:{groupId:"consumables"},equipment:{groupId:"equipment"},treasure:{groupId:"treasure"},weapon:{groupId:"weapons"}};let j=null;Hooks.once("tokenActionHudCoreApiReady",(async t=>{j=class Utils{static getSetting(e,n=null){let i=n??null;try{i=game.settings.get(T,e)}catch{t.api.Logger.debug(`Setting '${e}' not found`)}return i}static async setSetting(e,n){try{n=await game.settings.set(T,e,n),t.api.Logger.debug(`Setting '${e}' set to '${n}'`)}catch{t.api.Logger.debug(`Setting '${e}' not found`)}}}}));let x=null;Hooks.once("tokenActionHudCoreApiReady",(async t=>{x=class ActionHandler extends t.api.ActionHandler{a;async buildSystemActions(t){this.actors=this.actor?[this.actor]:this._getActors(),this.actorType=this.actor?.type,this.displayUnequipped=j.getSetting("displayUnequipped"),this.actor,"character"===this.actorType?this.#d():"npc"===this.actorType?this.#u():this.actor||this.#m()}#d(){this.#p()}#u(){this.#p()}#m(){}async#p(){if(0===this.items.size)return;const e="item",n=new Map;for(const[t,e]of this.items){const i=e.type;if(e.equipped||this.displayUnequipped){const s=n.get(i)??new Map;s.set(t,e),n.set(i,s)}}for(const[i,s]of n){const n=N[i]?.groupId;if(!n)continue;const o={id:n,type:"system"},a=[...s].map((([n,i])=>{const s=n,o=i.name,a=t.api.Utils.i18n(M[e]),l=`${a?`${a}: `:""}${o}`,c=[e,s].join(this.delimiter);return{id:s,name:o,listName:l,encodedValue:c}}));this.addActions(a,o)}}}}));let z=null;Hooks.once("tokenActionHudCoreApiReady",(async t=>{const e=E;Object.values(e).forEach((e=>{e.name=t.api.Utils.i18n(e.name),e.listName=`Group: ${t.api.Utils.i18n(e.listName??e.name)}`}));const n=Object.values(e);z={layout:[{nestId:"inventory",id:"inventory",name:t.api.Utils.i18n("Template.Inventory"),groups:[{...e.weapons,nestId:"inventory_weapons"},{...e.armor,nestId:"inventory_armor"},{...e.equipment,nestId:"inventory_equipment"},{...e.consumables,nestId:"inventory_consumables"},{...e.containers,nestId:"inventory_containers"},{...e.treasure,nestId:"inventory_treasure"}]},{nestId:"utility",id:"utility",name:t.api.Utils.i18n("tokenActionHud.utility"),groups:[{...e.combat,nestId:"utility_combat"},{...e.token,nestId:"utility_token"},{...e.rests,nestId:"utility_rests"},{...e.utility,nestId:"utility_utility"}]}],groups:n}}));let B=null;Hooks.once("tokenActionHudCoreApiReady",(async t=>{B=class RollHandler extends t.api.RollHandler{async handleActionClick(t,e){const[n,i]=e.split("|");if(["item"].includes(n)&&this.isRenderItem())return this.doRenderItem(this.actor,i);const s=["character"];if(this.actor)return void await this.#g(t,this.actor,this.token,n,i);const o=canvas.tokens.controlled.filter((t=>s.includes(t.actor?.type)));for(const e of o){const s=e.actor;await this.#g(t,s,e,n,i)}}async handleActionHover(t,e){}async handleGroupClick(t,e){}async#g(t,e,n,i,s){switch(i){case"item":this.#y(t,e,s);break;case"utility":this.#h(n,s)}}#y(t,e,n){e.items.get(n).toChat(t)}async#h(t,e){"endTurn"===e&&game.combat?.current?.tokenId===t.id&&await(game.combat?.nextTurn())}}}));let L=null;Hooks.once("tokenActionHudCoreApiReady",(async t=>{L=class SystemManager extends t.api.SystemManager{getActionHandler(){return new x}getAvailableRollHandlers(){return{core:"Core Template"}}getRollHandler(t){let e;return e=new B,e}async registerDefaults(){return z}registerSettings(t){!function register(t){game.settings.register(T,"displayUnequipped",{name:game.i18n.localize("tokenActionHud.fu.settings.displayUnequipped.name"),hint:game.i18n.localize("tokenActionHud.fu.settings.displayUnequipped.hint"),scope:"client",config:!0,type:Boolean,default:!0,onChange:e=>{t(e)}})}(t)}registerStyles(){return{template:{class:"tah-style-template-style",file:"tah-template-style",moduleId:T,name:"Template Style"}}}}})),Hooks.on("tokenActionHudCoreApiReady",(async()=>{const t=game.modules.get(T);t.api={requiredCoreModuleVersion:"1.5",SystemManager:L},Hooks.call("tokenActionHudSystemReady",t)}));
